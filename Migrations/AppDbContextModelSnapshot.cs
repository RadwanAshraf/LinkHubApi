// <auto-generated />
using System;
using LinkHubApi.CodeFirstMigration.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LinkHubApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LinkHubApi.CodeFirstMigration.Entities.ProfileSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AvatarID")
                        .HasColumnType("int");

                    b.Property<byte[]>("Background")
                        .HasColumnType("VARBINARY(MAX)");

                    b.Property<string>("Font")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("FontColor")
                        .HasMaxLength(7)
                        .HasColumnType("VARCHAR(7)");

                    b.Property<string>("Mode")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<byte[]>("ProfilePic")
                        .HasColumnType("VARBINARY(MAX)");

                    b.Property<int>("Style")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProfileSettings", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvatarID = 1,
                            Font = "Arial",
                            FontColor = "#521486",
                            Mode = "Dark",
                            Style = 0
                        },
                        new
                        {
                            Id = 2,
                            AvatarID = 2,
                            Font = "Arial",
                            FontColor = "#521486",
                            Mode = "Blue",
                            Style = 0
                        },
                        new
                        {
                            Id = 3,
                            AvatarID = 3,
                            Font = "Arial",
                            FontColor = "#521486",
                            Mode = "White",
                            Style = 0
                        },
                        new
                        {
                            Id = 4,
                            AvatarID = 4,
                            Font = "Arial",
                            FontColor = "#521486",
                            Mode = "Purple ",
                            Style = 0
                        },
                        new
                        {
                            Id = 5,
                            AvatarID = 5,
                            Font = "Arial",
                            FontColor = "#521486",
                            Mode = "Red",
                            Style = 0
                        });
                });

            modelBuilder.Entity("LinkHubApi.CodeFirstMigration.Entities.SocialLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IconUrl")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LinkUrl")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Title")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SocialLink", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IconUrl = "https://www.facebook.com/favicon.ico",
                            IsActive = true,
                            LinkUrl = "https://www.facebook.com/johndoe",
                            Title = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            IconUrl = "https://twitter.com/favicon.ico",
                            IsActive = true,
                            LinkUrl = "https://twitter.com/johndoe",
                            Title = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            IconUrl = "https://www.linkedin.com/favicon.ico",
                            IsActive = true,
                            LinkUrl = "https://www.linkedin.com/in/johndoe",
                            Title = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            IconUrl = "https://www.facebook.com/favicon.ico",
                            IsActive = true,
                            LinkUrl = "https://www.facebook.com/janedoe",
                            Title = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            IconUrl = "https://twitter.com/favicon.ico",
                            IsActive = false,
                            LinkUrl = "https://twitter.com/janedoe",
                            Title = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            IconUrl = "https://www.linkedin.com/favicon.ico",
                            IsActive = true,
                            LinkUrl = "https://www.linkedin.com/in/janedoe",
                            Title = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 7,
                            IconUrl = "https://www.facebook.com/favicon.ico",
                            IsActive = true,
                            LinkUrl = "https://www.facebook.com/johndoe",
                            Title = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 8,
                            IconUrl = "https://twitter.com/favicon.ico",
                            IsActive = true,
                            LinkUrl = "https://twitter.com/johndoe",
                            Title = 2,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("LinkHubApi.CodeFirstMigration.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("About")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AccountSettingsID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)")
                        .HasAnnotation("Description", "Email address of the user")
                        .HasAnnotation("RegularExpression", "^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Gender")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasAnnotation("Description", "Gender of the user: true for male, false for female");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("Description", "Password of the user");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ProfileSettingsId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ProfileSettingsId");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountSettingsID = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jdoe@example.com",
                            FName = "John",
                            Gender = true,
                            JobTitle = "Software Engineer",
                            LName = "Doe",
                            Location = "New York City",
                            Password = "P@ssw0rd",
                            Phone = "555-555-5555",
                            UserName = "jdoe"
                        },
                        new
                        {
                            Id = 2,
                            AccountSettingsID = 0,
                            Birthday = new DateTime(1985, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane.doe@example.com",
                            FName = "Jane",
                            Gender = false,
                            JobTitle = "Product Manager",
                            LName = "Doe",
                            Location = "San Francisco",
                            Password = "P@ssw0rd",
                            Phone = "555-555-5555",
                            UserName = "jane.doe"
                        },
                        new
                        {
                            Id = 3,
                            AccountSettingsID = 0,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jdoe@example.com",
                            FName = "John",
                            Gender = true,
                            JobTitle = "Software Engineer",
                            LName = "Doe",
                            Location = "New York City",
                            Password = "P@ssw0rd",
                            Phone = "555-555-5555",
                            UserName = "jdoe"
                        },
                        new
                        {
                            Id = 4,
                            AccountSettingsID = 0,
                            Birthday = new DateTime(1985, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "janedoe@example.com",
                            FName = "Jane",
                            Gender = false,
                            JobTitle = "Product Manager",
                            LName = "Doe",
                            Location = "San Francisco",
                            Password = "P@ssw0rd",
                            Phone = "555-555-5555",
                            UserName = "janedoe"
                        },
                        new
                        {
                            Id = 5,
                            AccountSettingsID = 0,
                            Birthday = new DateTime(1983, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "markjohnson@example.com",
                            FName = "Mark",
                            Gender = true,
                            JobTitle = "Marketing Manager",
                            LName = "Johnson",
                            Location = "Chicago",
                            Password = "P@ssw0rd",
                            Phone = "555-555-5555",
                            UserName = "markjohnson"
                        },
                        new
                        {
                            Id = 6,
                            AccountSettingsID = 0,
                            Birthday = new DateTime(1992, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "emilychen@example.com",
                            FName = "Emily",
                            Gender = false,
                            JobTitle = "Sales Representative",
                            LName = "Chen",
                            Location = "Los Angeles",
                            Password = "P@ssw0rd",
                            Phone = "555-555-5555",
                            UserName = "emilychen"
                        });
                });

            modelBuilder.Entity("LinkHubApi.CodeFirstMigration.Entities.SocialLink", b =>
                {
                    b.HasOne("LinkHubApi.CodeFirstMigration.Entities.User", null)
                        .WithMany("SocialLinks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LinkHubApi.CodeFirstMigration.Entities.User", b =>
                {
                    b.HasOne("LinkHubApi.CodeFirstMigration.Entities.ProfileSettings", "ProfileSettings")
                        .WithMany()
                        .HasForeignKey("ProfileSettingsId");

                    b.Navigation("ProfileSettings");
                });

            modelBuilder.Entity("LinkHubApi.CodeFirstMigration.Entities.User", b =>
                {
                    b.Navigation("SocialLinks");
                });
#pragma warning restore 612, 618
        }
    }
}
